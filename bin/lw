#!/usr/bin/env bash

set -e

source "$(dirname $0)/../ext/bashplus/bin/bash+"
bash+:import :std can

GETOPT_SPEC="\
lw <command> <options> <arguments>

The most commonly used commands:
  help, config, auth
  server-create, server-list, server-info, server-destroy

See 'lw help' for more help.

Options:
--
h           Show the command summary
help        Browse the complete 'lw' documentation
 
q,quiet     Show minimal output
v,verbose   Show verbose output
 
token=      Explicitly specify the LW v1 API Authentication Token
d,dryrun    Check arguments but don't actually run the API command
T           Show (don't hide) API token in the verbose output
 
O           Debug - Show response output
H           Debug - Show reponse headers
J           Debug - Show parsed JSON response
x           Debug - Turn on Bash trace (set -x) output
"

main() {
  local command command_arguments
  local lw_root lw_config lw_apiserver lw_username lw_password lw_authtoken
  local quiet_output verbose_output
  local raw_output json_output
  local show_output show_headers show_json
  local dry_run show_token
  local terminal_lines terminal_cols
  init-vars
  get-opts

  callable-or-source "$command" ||
    error "unknown 'git hub' command '$command'"
  "command:$command" "$@"
}

init-vars() {
  :
}

get-opts() {
  [ $# -eq 0 ] && set -- --help

  eval "$(
    echo "$OPTIONS_SPEC" |
      git rev-parse --parseopt -- "$@" ||
    echo exit $?
  )"

  while [ $# -gt 0 ]; do
    local option="$1"; shift
    case "$option" in
      -q) quiet_output=true ;;
      -v) verbose_output=true ;;
      -r)
        raw_output=true
        quiet_output=true
        ;;
      -j) json_output=true ;;

      -d) dry_run=true ;;
      -T)
        show_token=true
        verbose_output=true
        quiet_output=false
        ;;

      --) break ;;

      # Debug options:
      -O) show_output=true ;;
      -H) show_headers=true ;;
      -J) show_json=true ;;
      -x) set -x ;;

      *) error "unexpected option '$option'" ;;
    esac
  done

  [ -z "$list_size" ] && ! interactive && list_size="$Infinity"

  command="$1"; shift
  command_arguments=("$@")

  [[ "$command" == "setup" ]] ||
  [[ "$command" = "config" ]] ||
  [[ "$command" = "config-unset" ]] ||
  ! (callable-or-source "$command") ||
    check-config

  true
}

api-post() {
  (
    set -x
    curl --request POST https://$LWAPI_USERNAME:$LWAPI_PASSWORD@$url/Account/Auth/token -d '{}'
  )
}

[ "$0" != "$BASH_SOURCE" ] || main "$@"

# vim: set lisp:
